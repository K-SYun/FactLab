# Production 환경 보안 설정
spring:
    
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    
    # 커넥션 풀 보안 설정
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000
      idle-timeout: 300000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: update  # 임시로 update 모드 사용
    show-sql: false  # SQL 로그 비활성화
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        
  # Spring Security 활성화
  security:
    enabled: true
    
  # 세션 보안 설정
  session:
    store-type: redis
    timeout: 1800  # 30분
    redis:
      flush-mode: on-save
      
  # Redis 설정 (세션 스토어)
  redis:
    host: ${REDIS_HOST:redis}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: 2000ms
    lettuce:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0

server:
  address: 0.0.0.0
  port: 8080
  servlet:
    context-path: /
    session:
      cookie:
        secure: true  # HTTPS에서만 전송
        http-only: true  # XSS 방지
        same-site: strict  # CSRF 방지
        max-age: 1800  # 30분
  
  # SSL 설정 (내부 통신용)
  ssl:
    enabled: false  # Nginx에서 SSL 종료
  
  # 에러 페이지 정보 숨김
  error:
    include-stacktrace: never
    include-message: never

# JWT 보안 강화
jwt:
  secret: ${JWT_SECRET}  # 환경변수에서 가져옴 (반드시 32자 이상)
  expiration: 3600000  # 1시간
  refresh-expiration: 604800000  # 7일

# OAuth 설정 (환경변수 필수)
oauth:
  google:
    client-id: ${GOOGLE_CLIENT_ID}
    client-secret: ${GOOGLE_CLIENT_SECRET}
    redirect-uri: ${GOOGLE_REDIRECT_URI:https://polradar.com/api/auth/google/callback}
  naver:
    client-id: ${NAVER_CLIENT_ID}
    client-secret: ${NAVER_CLIENT_SECRET}
    redirect-uri: ${NAVER_REDIRECT_URI:https://polradar.com/api/auth/naver/callback}
  kakao:
    client-id: ${KAKAO_CLIENT_ID}
    redirect-uri: ${KAKAO_REDIRECT_URI:https://polradar.com/api/auth/kakao/callback}

# 앱 설정
app:
  frontend-url: ${FRONTEND_URL:https://polradar.com}
  admin-url: ${ADMIN_URL:https://polradar.com/admin}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://polradar.com}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: "*"
    allow-credentials: true

# 외부 API 설정
api:
  assembly:
    key: ${ASSEMBLY_API_KEY}
    base-url: https://open.assembly.go.kr/portal/openapi
    timeout: 30s

# 로깅 설정 (보안 강화)
logging:
  level:
    root: INFO
    com.factlab: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: OFF  # SQL 로그 완전 비활성화
    org.hibernate.type.descriptor.sql.BasicBinder: OFF
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /var/log/factlab/app.log
    max-size: 100MB
    max-history: 30
    
# Swagger 비활성화 (Production)
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

# Actuator 보안 설정
management:
  health:
    redis:
      enabled: false
  endpoints:
    web:
      exposure:
        include: health,info,metrics
      base-path: /actuator
  endpoint:
    health:
      show-details: never
  server:
    port: 8081  # 별도 포트로 관리
    ssl:
      enabled: false

# 파일 업로드 제한
spring.servlet.multipart:
  max-file-size: 10MB
  max-request-size: 50MB
  enabled: true

# 데이터 유효성 검증
validation:
  email:
    max-length: 255
  nickname:
    min-length: 2
    max-length: 20
  password:
    min-length: 8
    max-length: 128
    
# Rate Limiting (Redis 기반)
rate-limit:
  enabled: true
  redis-key-prefix: "rate_limit:"
  default-rate: 100  # 100 requests per minute
  auth-rate: 5      # 5 login attempts per minute
  api-rate: 200     # 200 API calls per minute