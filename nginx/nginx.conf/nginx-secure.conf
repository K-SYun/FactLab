# Nginx 보안 강화 설정
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # 기본 설정
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # 보안 헤더 설정
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; connect-src 'self' https:; font-src 'self'; frame-ancestors 'none';" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # 서버 정보 숨기기
    server_tokens off;
    
    # Rate Limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # Gzip 압축
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    
    # 로그 설정
    log_format secure '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $bytes_sent '
                     '"$http_referer" "$http_user_agent" '
                     '$request_time $upstream_response_time';
    
    access_log /var/log/nginx/access.log secure;
    error_log /var/log/nginx/error.log warn;

    # HTTP에서 HTTPS로 리다이렉트
    server {
        listen 80;
        server_name polradar.com www.polradar.com;
        
        # Let's Encrypt ACME 챌린지용
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # 나머지 모든 요청을 HTTPS로 리다이렉트
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS 서버
    server {
        listen 443 ssl http2;
        server_name polradar.com www.polradar.com;
        
        # SSL 인증서 설정 (Let's Encrypt)
        ssl_certificate /etc/letsencrypt/live/polradar.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/polradar.com/privkey.pem;
        
        # SSL 보안 설정
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP Stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/letsencrypt/live/polradar.com/chain.pem;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;
        
        # Rate Limiting 적용
        limit_req zone=api burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;
        
        # 업로드 파일 크기 제한
        client_max_body_size 10M;
        
        # Timeout 설정
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
        
        # User Service (React SPA) - Root path
        location / {
            proxy_pass http://user-service:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 보안 헤더
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
        }

        # Admin Service - 인증된 사용자만 접근
        location /admin {
            # IP 화이트리스트 (관리자 IP만 허용)
            # allow 1.2.3.4;    # 관리자 IP
            # deny all;
            
            # Rate Limiting 강화
            limit_req zone=login burst=5 nodelay;
            
            proxy_pass http://admin-service:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # 보안 헤더 추가
            add_header X-Admin-Access "restricted" always;
        }

        # API 엔드포인트 - Rate Limiting 적용
        location ~ ^/api/(.*)$ {
            # API Rate Limiting
            limit_req zone=api burst=50 nodelay;
            
            # 로그인 API 특별 제한
            location ~ ^/api/(auth|login) {
                limit_req zone=login burst=3 nodelay;
                proxy_pass http://backend-service:8080/api/$1$is_args$args;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            proxy_pass http://backend-service:8080/api/$1$is_args$args;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # AI Service - 접근 제한
        location ^~ /ai/ {
            # AI 서비스 접근 제한 (내부에서만 접근)
            deny all;
            allow 172.16.0.0/12; # Docker 내부 네트워크만 허용
            
            proxy_pass http://ai-service:8001/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 60s;
        }

        # Crawler Service - 내부 접근만 허용
        location /crawler/ {
            deny all;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            
            proxy_pass http://crawler-service:3002/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # 숨겨진 파일/디렉토리 접근 차단
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # 의심스러운 파일 확장자 차단
        location ~* \.(php|asp|jsp|cgi|py|sh)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}