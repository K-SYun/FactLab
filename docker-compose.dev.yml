# Development Docker Compose
services:
  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx-dev.conf:/etc/nginx/nginx.conf
    depends_on:
      - user-service
      - admin-service
      - backend-service
    restart: unless-stopped
    networks:
      - frontend
      - backend

  user-service:
    build: 
      context: ./user_service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./user_service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8080/api
      - CHOKIDAR_USEPOLLING=true
      - FAST_REFRESH=true
    restart: unless-stopped
    networks:
      - frontend

  admin-service:
    build: 
      context: ./admin_service
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    volumes:
      - ./admin_service:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://localhost:8080/api
      - CHOKIDAR_USEPOLLING=true
      - FAST_REFRESH=true
    restart: unless-stopped
    networks:
      - frontend

  backend-service:
    build: 
      context: ./backend_service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "5005:5005"  # Debug port
    volumes:
      - ./backend_service:/app
    depends_on:
      - database
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/factlab
      - SPRING_DATASOURCE_USERNAME=factlab
      - SPRING_DATASOURCE_PASSWORD=password123
      - JWT_SECRET=your-dev-jwt-secret-key
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - NAVER_CLIENT_ID=${NAVER_CLIENT_ID:-}
      - NAVER_CLIENT_SECRET=${NAVER_CLIENT_SECRET:-}
      - KAKAO_CLIENT_ID=${KAKAO_CLIENT_ID:-}
      - JAVA_OPTS=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
      - LOGGING_LEVEL_SQL=DEBUG
      - SPRING_JPA_SHOW_SQL=true
    restart: unless-stopped
    networks:
      - backend

  crawler-service:
    build: 
      context: ./crawler
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    volumes:
      - ./crawler:/app
    depends_on:
      - database
    environment:
      - ENVIRONMENT=development
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=factlab
      - DB_USER=factlab
      - DB_PASSWORD=password123
      - DATABASE_URL=postgresql://factlab:password123@database:5432/factlab
      - LOG_LEVEL=DEBUG
    restart: unless-stopped
    networks:
      - backend

  ai-service:
    build: 
      context: ./ai_service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./ai_service:/app
    depends_on:
      - database
    environment:
      - ENVIRONMENT=development
      - DB_HOST=database
      - DB_PORT=5432
      - DB_NAME=factlab
      - DB_USER=factlab
      - DB_PASSWORD=password123
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
      - LOG_LEVEL=DEBUG
    restart: unless-stopped
    networks:
      - backend

  database:
    image: postgres:15-alpine
    ports:
      - "5432:5432"  # 개발 환경에서는 외부 접근 허용
    environment:
      - POSTGRES_DB=factlab
      - POSTGRES_USER=factlab
      - POSTGRES_PASSWORD=password123
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - ./database/init-dev-data.sql:/docker-entrypoint-initdb.d/init-dev-data.sql:ro
    restart: unless-stopped
    networks:
      - backend

  # Database management tool for development
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@factlab.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - database
    networks:
      - backend

volumes:
  postgres_dev_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge